require_once "db_connection.php";
// define variables and set to empty values
$first_name = $last_name = $email = $password = "";
$first_name_err = $last_name_err = $email_err = $password_err = "";

if (isset($_POST["submit"])) {

$first_name = mysqli_real_escape_string($conn, $_POST['first_name']);
$last_name = mysqli_real_escape_string($conn, $_POST['last_name']);
$email = mysqli_real_escape_string($conn, $_POST['email']);
$password = mysqli_real_escape_string($conn, $_POST['password']);

if (empty($first_name)) {array_push($errors, "First name is required");}
if (empty($last_name)) {array_push($errors, "Last name is required");}
if (empty($email)) {array_push($errors, "Email is required");}
if (empty($password)) {array_push($errors, "Password is required");}

$user_check_query = "SELECT * FROM user WHERE email='$email' LIMIT 1";
$result = mysqli_query($conn, $user_check_query);
$user = mysqli_fetch_assoc($result);

if ($user) {
if ($user['email'] === $email) {
array_push($errors, "Email already exists");
}
}

if (count((array)$errors) == 0) {
//$password = md5($password);
$query = "INSERT INTO user (first_name, last_name, email, password) VALUES ('$first_name', '$last_name', '$email',
'$password')";
mysqli_query($conn, $query);
// $_SESSION['email'] = $email;
// $_SESSION['success'] = "You are now logged in";
header('location: login.php');
}
}
-------------------------------------------------------------------------------
function initMap() {
    
    let mapOptions = {
        center: { lat: 40.7413549, lng: -73.9980244 },
        zoom: 12,
    }
    let map = new google.maps.Map(document.getElementById('map'), mapOptions);
    
    let markerOptions = {
        position: ( 40.7413549, -73.9980244 ),
        map: map
    }

    let marker = new google.maps.Marker(markerOptions)
}



            <?php
            $conn = require 'db_connection.php';
            $stmt = $conn->prepare("SELECT incident_title FROM incident INNER JOIN user
            ON incident.user_id = $user[user_id] ORDER BY incident_id DESC ");
            $stmt->execute();

            $result = $stmt->get_result();
            $i = 1;

            while ($row = $result->fetch_assoc()) {

                ?>

                <tr>
                    <th scope="row">
                        <?php echo $i++ ?>
                    </th>
                    <td>
                        <?php echo $row["incident_title"] ?>
                    </td>
                </tr>
            <?php } ?>


<?php

session_start();

if (isset($_SESSION['user_id'])) {

    $conn = require __DIR__ . "/db_connection.php";

    $sql = "SELECT * FROM user 
            WHERE user_id = {$_SESSION['user_id']}";

    $result = $conn->query($sql);

    $user = $result->fetch_assoc();
}

?>

<!DOCTYPE html>
<html>


<body>
    <?php if (isset($user)): ?>

        <?php
        $conn = require 'db_connection.php';
        if (isset($_GET['id'])) {
            $id = $_GET['id'];

            $stmt = $conn->prepare("SELECT * FROM incident 
            where incident_id = ?");
            $stmt->bind_param("i", $id);
            $stmt->execute();

            $result = $stmt->get_result();

            $desc = $result->fetch_assoc();

            if (!$desc) {
                die("Article not found");
            }

            ?>



            <div class="row">
                <div class="leftcolumn">
                    <div class="card">
                        <h2 class="center">
                            <?= htmlspecialchars($desc["incident_title"]) ?>
                        </h2>

                        <img class="img-fluid center" src="uploads/<?= $desc["incident_image"] ?>" alt="">

                        <p class="center">
                            <?= htmlspecialchars($desc["incident_description"]) ?>
                        </p>

                    </div>
                </div>
            </div>
            </div>
            <?php

        } else {
            $id = 1;

        }

        ?>
    <?php else: ?>

        <p> <a href="login.php">Login</a> or <a href="register.php">Register</a> </p>

    <?php endif; ?>

</body>

</html>

----------------------------------------------------------

          var map;
            var bounds = new google.maps.LatLngBounds();
            var mapOptions = {
                mapTypeId: 'roadmap'
            };

            map = new google.maps.Map(document.getElementById("map"), mapOptions);
            map.setTilt(45);

            var markers = [
                <?php if ($result->num_rows > 0) {
                    while ($row = $result->fetch_assoc()) {

                        echo '["' . $row['lat'] . '","' . $row['lng'] . '"],';
                    }
                } ?>
            ];

            var infoWindowContent = [
                <?php if ($result_info->num_rows > 0) {
                    while ($row = $result_info->fetch_assoc()) {
                        ?>
                        ['<div class="info_content">' + '<h3><?php echo $row['incident_title']; ?></h3>' + '<p><?php echo $row['incident_description']; ?></p>' + '</div>'],
                            
                                                                             <?php
                    }
                } ?>
            ];

        var infoWindow = new google.maps.InfoWindow(), marker, i;

        for (i = 0; i < markers.length; i++) {
            var position = new google.maps.LatLng(markers[i][0], markers[i][1]);
            bounds.extend(position);
            marker = new google.maps.Marker({
                position: position,
                map: map,

            });

            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
                    infoWindow.setContent(infoWindowContent[i][0]);
                    infoWindow.open(map, marker);
                }
            })(marker, i));

            map.fitBounds(bounds);
        }

        var boundsListener = google.maps.event.addListener((map), 'bounds_changed', function (event) {
            this.setZoom(10);
            google.maps.event.removeListener(boundsListener);
        });


        google.maps.event.addDomListener(window, 'load', initMap);